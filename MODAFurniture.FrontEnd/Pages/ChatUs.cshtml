@page
@using Microsoft.Extensions.AI
@model MODAFurniture.FrontEnd.Pages.ChatUsModel
@{
    ViewData["Title"] = "Chat Us";
}
<form method="post">
    <input type="hidden" name="ChatId" value="@Model.ChatId" />
    <div class="chat-header-container main-background-gradient">
        <div class="chat-header-controls page-width">
            <table style="width: 100%;">
                <tr>
                    <td>
                        <h2 class="page-width">Ask us anything!!</h2>
                    </td>
                    <td style="text-align:right">
                        <button type="submit" class="btn-default" name="action" value="newChat">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="new-chat-icon">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
                            </svg>
                            New chat
                        </button>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <br />
    <div>
        <label for="selectedDeployment" style="margin-right:10px;">Model:</label>
        <select id="selectedDeployment" name="selectedDeployment" asp-for="SelectedDeployment"
                asp-items="@(new SelectList(Model.DeploymentNames))">
        </select>
        <br />
        <label class="input-box page-width">
            <textarea name="message" placeholder="Type your message..." rows="1"></textarea>

            <div class="tools">
                <button type="submit" title="Send" class="send-button" name="action" value="sendMessage">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="tool-icon">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5" />
                    </svg>
                </button>
            </div>
        </label>
    </div>
</form>
<br />
<div>
    <ul>
        @if (Model.MessageHistory != null)
        {
            @foreach (var msg in Model.MessageHistory.Where(m => m.Role != ChatRole.System).Reverse())
            {
                if (msg.Role == ChatRole.User)
                {
                    <li class="user-message">
                        <div class="user-message-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 1.5c-5.25 0-9.375 4.125-9.375 9.375S6.75 20.25 12 20.25s9.375-4.125 9.375-9.375S17.25 1.5 12 1.5Zm0 15a5.625 5.625 0 1 1 0-11.25A5.625 5.625 0 0 1 12 16.5Z" />
                            </svg>
                        </div>
                        <div class="user-message-header">User :</div>
                        <div class="user-message-text">
                            @msg.Text
                        </div>
                    </li>
                }
                else if (msg.Role == ChatRole.Assistant)
                {
                    <li class="assistant-message">
                        <div class="assistant-message-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 1.5c-5.25 0-9.375 4.125-9.375 9.375S6.75 20.25 12 20.25s9.375-4.125 9.375-9.375S17.25 1.5 12 1.5Zm0 15a5.625 5.625 0 1 1 0-11.25A5.625 5.625 0 0 1 12 16.5Z" />
                            </svg>
                        </div>
                        <div class="assistant-message-header">Assistant :</div>
                        <div class="assistant-message-text">
                            @msg.Text
                        </div>
                    </li>
                }
            }
        }
    </ul>
</div>

<style>
    .chat-container {
        position: sticky;
        bottom: 0;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
        padding-top: 0.75rem;
        padding-bottom: 1.5rem;
        border-top-width: 1px;
        background-color: #F3F4F6;
        border-color: #E5E7EB;
    }

    .input-box {
        display: flex;
        flex-direction: column;
        background: white;
        border: 1px solid rgb(229, 231, 235);
        border-radius: 8px;
        padding: 0.5rem 0.75rem;
        margin-top: 0.75rem;
    }

        .input-box:focus-within {
            outline: 2px solid #4152d5;
        }

    textarea {
        resize: none;
        border: none;
        outline: none;
        flex-grow: 1;
    }

        textarea:placeholder-shown + .tools {
            --send-button-color: #aaa;
        }

    .tools {
        display: flex;
        margin-top: 1rem;
        align-items: center;
    }

    .tool-icon {
        width: 1.25rem;
        height: 1.25rem;
    }

    .send-button {
        color: var(--send-button-color);
        margin-left: auto;
    }

        .send-button:hover {
            color: black;
        }

    .attach {
        background-color: white;
        border-style: dashed;
        color: #888;
        border-color: #888;
        padding: 3px 8px;
    }

        .attach:hover {
            background-color: #f0f0f0;
            color: black;
        }


    .user-message {
        display: grid;
        grid-template-rows: min-content;
        grid-template-columns: 2rem minmax(0, 1fr);
        gap: 0.25rem;
        background: #f0f2f1;
        margin: 5px;
    }

    .user-message-header {
        font-weight: 600;
    }

    .user-message-text {
        grid-column-start: 2;
    }

    .user-message-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 9999px;
        width: 1.5rem;
        height: 1.5rem;
        color: #ffffff;
        background: #0000ff;
    }

        .user-message-icon svg {
            width: 1rem;
            height: 1rem;
        }

    .assistant-message, .assistant-search {
        display: grid;
        grid-template-rows: min-content;
        grid-template-columns: 2rem minmax(0, 1fr);
        gap: 0.25rem;
        margin: 5px;
    }

    .assistant-message-header {
        font-weight: 600;
    }

    .assistant-message-text {
        grid-column-start: 2;
    }

    .assistant-message-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 9999px;
        width: 1.5rem;
        height: 1.5rem;
        color: #ffffff;
        background: #ff0000;
    }

        .assistant-message-icon svg {
            width: 1rem;
            height: 1rem;
        }

    .assistant-search {
        font-size: 0.875rem;
        line-height: 1.25rem;
    }

    .assistant-search-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 1.5rem;
        height: 1.5rem;
    }

        .assistant-search-icon svg {
            width: 1rem;
            height: 1rem;
        }

    .assistant-search-content {
        align-content: center;
    }

    .assistant-search-phrase {
        font-weight: 600;
    }

    .new-chat-icon {
        width: 1.25rem;
        height: 1.25rem;
        color: rgb(55, 65, 81);
    }

    .new-chat-icon {
        width: 1.25rem;
        height: 1.25rem;
        color: rgb(55, 65, 81);
    }

    .new-chat-icon {
        width: 1.25rem;
        height: 1.25rem;
        color: rgb(55, 65, 81);
    }
</style>
@section Scripts {
    <script>
        function onDeploymentChange() {
            document.getElementById('chatForm').submit();
        }
    </script>
    }
